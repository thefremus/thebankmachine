// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheBankMachine.Infrastructure;

#nullable disable

namespace TheBankMachine.Api.Migrations
{
    [DbContext(typeof(TheBankMachineContext))]
    [Migration("20211021140337_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5");

            modelBuilder.Entity("TheBankMachine.Domain.AggregatesModel.AccountAggregate.AccountAggregate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TheBankMachine.Domain.AggregatesModel.AccountAggregate.AccountTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountAggregateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountTransactionType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountAggregateId");

                    b.ToTable("AccountTransaction");
                });

            modelBuilder.Entity("TheBankMachine.Domain.AggregatesModel.AccountAggregate.AccountTransaction", b =>
                {
                    b.HasOne("TheBankMachine.Domain.AggregatesModel.AccountAggregate.AccountAggregate", "AccountAggregate")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountAggregate");
                });

            modelBuilder.Entity("TheBankMachine.Domain.AggregatesModel.AccountAggregate.AccountAggregate", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
